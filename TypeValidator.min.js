const TypeValidator=function(){function t(t,e){let r=[],i="",n=!1,s="";for(let l=0;l<t.length;l++){let u=t[l];n?(u===s&&(n=!1),i+=u):'"'===u||"'"===u?(n=!0,s=u,i+=u):u===e?(r.push(i),i=""):i+=u}return""!==i&&r.push(i),r}function e(r,i){if("function"==typeof i)return i(r);if("string"==typeof i){if(i.startsWith("!")){let n=i.slice(1);return![null,void 0].includes(r)&&!e(r,n)}if(i.endsWith("?")){let s=i.slice(0,-1);return null==r||e(r,s)}if("any"===i)return!0;if("null"===i)return null===r;if("object"===i)return"object"==typeof r&&null!==r;if("array"===i)return Array.isArray(r);if(i.startsWith("string{/")&&i.endsWith("/}")){if("string"!=typeof r)return!1;let l=i.slice(8,-2),u=RegExp(l);return u.test(r)}if(i.startsWith("array<")&&i.includes("{")&&i.includes("}")){let f=i.indexOf(">"),o=i.substring(6,f),a=o;return!!(Array.isArray(r)&&function t(e,r){let i=r.indexOf("{"),n=r.indexOf("}",i);if(-1!==i&&-1!==n){let s=r.substring(i+1,n);if(-1===s.indexOf(","))return e.length===Number(s);let l=s.split(","),u=l[0]?parseInt(l[0],10):0,f=l[1]?parseInt(l[1],10):1/0;return e.length>=u&&e.length<=f}return!0}(r,i.substring(f+1)))&&r.every(t=>e(t,a))}if(i.startsWith('"')&&i.endsWith('"')||i.startsWith("'")&&i.endsWith("'"))return r===i.slice(1,-1);if(i.startsWith("number{")&&i.endsWith("}")){let[h,c]=i.slice(7,-1).split(",").map(t=>t.trim()?parseInt(t,10):t);return"number"==typeof r&&r>=(""===h?-1/0:h)&&r<=(""===c?1/0:c)}if(!Number.isNaN(Number(r))&&!Number.isNaN(Number(i)))return Number(r)===Number(i);if(i.startsWith("[")&&i.endsWith("]")){let _=i.slice(1,-1);return Array.isArray(r)&&r.every(t=>{let r=e(t,_.trim());return r})}if(i.startsWith("{")&&i.endsWith("}")){let y=t(i.slice(1,-1),",");return"object"==typeof r&&null!==r&&y.every(i=>{let[n,s]=t(i.trim(),":");(s=s.trim()).startsWith("'")&&s.endsWith("'")&&(s=s.slice(1,-1)),s.startsWith('"')&&s.endsWith('"')&&(s=s.slice(1,-1));let l=r.hasOwnProperty(n.trim())&&e(r[n.trim()],s.trim());return l})}let d=t(i,"|");if(d.length>1){for(let p of d)if(e(r,p.trim()))return!0}return typeof r===i}return"object"==typeof i&&(Array.isArray(i)?Array.isArray(r)&&r.every((t,r)=>e(t,i[r])):"object"==typeof r&&null!==r&&Object.keys(i).every(t=>e(r[t],i[t])))}return{isType:e,validate:function t(r,i){let n={success:!0,errors:[]};for(let s in r)if(r.hasOwnProperty(s)){let l=r[s],u=i[s];e(u,l)||(n.success=!1,n.errors.push({param:s,expectedType:l,receivedValue:u}))}return n},validateAndThrow:function t(r,i){for(let n in r)if(r.hasOwnProperty(n)){let s=r[n],l=i[n];if(!e(l,s))throw Error(`${n} must be of type ${s}.`)}}}}();